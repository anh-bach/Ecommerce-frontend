{"version":3,"sources":["components/order/Invoice.js","pages/user/History.js","functions/user.js","components/nav/UserNav.js","components/cards/ShowPaymentInfo.js"],"names":["styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","author","marginBottom","subtitle","margin","text","image","marginVertical","marginHorizontal","header","color","footer","padding","pageNumber","position","bottom","left","right","Invoice","order","style","fixed","Date","toLocaleString","data","products","getContent","item","product","price","count","brand","paymentIntent","created","id","orderStatus","amount","History","useState","orders","setOrders","setLoading","user","useDispatch","useSelector","state","useEffect","loadOrders","a","getUserOrders","token","res","userOrders","console","log","showDownloadLink","className","document","fileName","showOrderInTable","scope","map","index","shipping","CheckCircleOutlined","CloseCircleOutlined","UserNav","length","ShowPaymentInfo","userCart","cart","authToken","axios","post","process","headers","getUserCart","get","emptyUserCart","delete","saveUserAddress","address","applyCoupon","coupon","createOrder","stripeResponse","createCashOrderForUser","COD","couponApplied","getWishlist","addWishlist","productId","removeWishlist","put","to","showStatus","currency","toUpperCase","payment_method_types","status"],"mappings":"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","file":"static/js/23.87cb4343.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Document, Page, Text, StyleSheet } from '@react-pdf/renderer';\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  DataTableCell,\r\n} from '@david.kucsai/react-pdf-table';\r\n\r\nconst Invoice = ({ order }) => (\r\n  <Document>\r\n    <Page style={styles.body}>\r\n      <Text style={styles.header} fixed>\r\n        ~ {new Date().toLocaleString()} ~\r\n      </Text>\r\n      <Text style={styles.title}>Order Invoice</Text>\r\n      <Text style={styles.author}>React Redux Ecommerce</Text>\r\n      <Text style={styles.subtitle}>Order Summary</Text>\r\n      <Table>\r\n        <TableHeader>\r\n          <TableCell>Title</TableCell>\r\n          <TableCell>Price</TableCell>\r\n          <TableCell>Quantity</TableCell>\r\n          <TableCell>Brand</TableCell>\r\n          <TableCell>Color</TableCell>\r\n        </TableHeader>\r\n      </Table>\r\n\r\n      <Table data={order.products}>\r\n        <TableBody>\r\n          <DataTableCell getContent={(item) => item.product.title} />\r\n          <DataTableCell getContent={(item) => `$${item.product.price}`} />\r\n          <DataTableCell getContent={(item) => item.count} />\r\n          <DataTableCell getContent={(item) => item.product.brand} />\r\n          <DataTableCell getContent={(item) => item.color} />\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <Text style={styles.text}>\r\n        <Text>\r\n          Date: {'                '}{' '}\r\n          {new Date(order.paymentIntent.created * 1000).toLocaleString()}\r\n        </Text>\r\n        {'\\n'}\r\n        <Text>\r\n          Order Id: {'         '}\r\n          {order.paymentIntent.id}\r\n        </Text>\r\n        {'\\n'}\r\n        <Text>\r\n          Order Status: {'     '}\r\n          {order.orderStatus}\r\n        </Text>\r\n        {'\\n'}\r\n        <Text>Total Paid: ${order.paymentIntent.amount}</Text>\r\n      </Text>\r\n\r\n      <Text style={styles.footer}>~ Thank you for shopping with us ~</Text>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: 'center',\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    margin: 12,\r\n  },\r\n  text: {\r\n    margin: 12,\r\n    fontSize: 14,\r\n    textAlign: 'justify',\r\n  },\r\n  image: {\r\n    marginVertical: 15,\r\n    marginHorizontal: 100,\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  footer: {\r\n    padding: '100px',\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n});\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { toast } from 'react-toastify';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\n\r\nimport Invoice from '../../components/order/Invoice';\r\nimport UserNav from '../../components/nav/UserNav';\r\nimport { getUserOrders } from '../../functions/user';\r\nimport ShowPaymentInfo from '../../components/cards/ShowPaymentInfo';\r\n\r\nconst History = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n  }, [user]);\r\n\r\n  const loadOrders = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await getUserOrders(user.token);\r\n      setOrders(res.data.userOrders);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log('from load user orders', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const showDownloadLink = (order) => (\r\n    <PDFDownloadLink\r\n      className='btn btn-sm btn-block btn-outline-primary'\r\n      document={<Invoice order={order} />}\r\n      fileName='invoice.pdf'\r\n    >\r\n      Download PDF\r\n    </PDFDownloadLink>\r\n  );\r\n\r\n  const showEachOrder = () =>\r\n    orders.map((order, index) => (\r\n      <div key={index} className='m-5 p-3 card'>\r\n        <ShowPaymentInfo order={order} />\r\n        {showOrderInTable(order)}\r\n        <div className='row'>\r\n          <div className='col'>{showDownloadLink(order)}</div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n  const showOrderInTable = (order) => (\r\n    <table className='table table-bordered'>\r\n      <thead className='thead-light'>\r\n        <tr>\r\n          <th scope='col'>Title</th>\r\n          <th scope='col'>Price</th>\r\n          <th scope='col'>Brand</th>\r\n          <th scope='col'>Color</th>\r\n          <th scope='col'>Count</th>\r\n          <th scope='col'>Shipping</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {order.products.map((item, index) => (\r\n          <tr key={index}>\r\n            <td>\r\n              <b>{item.product.title}</b>\r\n            </td>\r\n            <td>{item.product.price}</td>\r\n            <td>{item.product.brand}</td>\r\n            <td>{item.color}</td>\r\n            <td>{item.count}</td>\r\n            <td>\r\n              {item.product.shipping === 'Yes' ? (\r\n                <CheckCircleOutlined className='text-success' />\r\n              ) : (\r\n                <CloseCircleOutlined className='text-danger' />\r\n              )}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row mt-2'>\r\n        <div className='col-md-2'>\r\n          <UserNav />\r\n        </div>\r\n        <div className='col-md-10 text-center'>\r\n          <h4>\r\n            {orders.length > 0 ? 'User Purchase Orders' : 'No Purchase Orders'}\r\n            {orders.length > 0 && showEachOrder()}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import axios from 'axios';\r\n\r\nexport const userCart = async (cart, authToken) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cart`,\r\n    { cart },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getUserCart = async (authToken) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: { authToken },\r\n  });\r\n};\r\n\r\nexport const emptyUserCart = async (authToken) => {\r\n  return await axios.delete(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: { authToken },\r\n  });\r\n};\r\n\r\nexport const saveUserAddress = async (authToken, address) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/address`,\r\n    { address },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const applyCoupon = async (authToken, coupon) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cart/coupon`,\r\n    { coupon },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const createOrder = async (authToken, stripeResponse) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/order`,\r\n    { stripeResponse },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const createCashOrderForUser = async (authToken, COD, coupon) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cash-order`,\r\n    { COD, couponApplied: coupon },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getUserOrders = async (authToken) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/user/orders`, {\r\n    headers: { authToken },\r\n  });\r\n};\r\n\r\nexport const getWishlist = async (authToken) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/user/wishlist`, {\r\n    headers: { authToken },\r\n  });\r\n};\r\n\r\nexport const addWishlist = async (authToken, productId) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/wishlist`,\r\n    { productId },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const removeWishlist = async (authToken, productId) => {\r\n  return await axios.put(\r\n    `${process.env.REACT_APP_API}/user/wishlist/${productId}`,\r\n    {},\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserNav = () => {\r\n  return (\r\n    <div>\r\n      <ul className='nav flex-column'>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/user/history'>\r\n            History\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/user/password'>\r\n            Password\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/user/wishlist'>\r\n            Wishlist\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserNav;\r\n","import React from 'react';\r\n\r\nconst ShowPaymentInfo = ({ order, showStatus = true }) => (\r\n  <div className=''>\r\n    <p>\r\n      <span>Order Id: {order.paymentIntent.id}</span>\r\n      {' / '}\r\n      <span>\r\n        Amount:{' '}\r\n        {(order.paymentIntent.amount / 100).toLocaleString('en-US', {\r\n          style: 'currency',\r\n          currency: 'USD',\r\n        })}\r\n      </span>{' '}\r\n      <span>Currency: {order.paymentIntent.currency.toUpperCase()}</span>\r\n      {' / '}\r\n      <span>Method: {order.paymentIntent.payment_method_types[0]}</span>\r\n      {' / '}\r\n      <span>Payment: {order.paymentIntent.status.toUpperCase()}</span>\r\n      {' / '}\r\n      <span>\r\n        Ordered on:{' / '}\r\n        {new Date(order.paymentIntent.created * 1000).toLocaleString()}\r\n      </span>\r\n      {' / '}\r\n      <br />\r\n      {showStatus && (\r\n        <span className='bg-primary text-white'>\r\n          STATUS: {order.orderStatus}\r\n        </span>\r\n      )}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default ShowPaymentInfo;\r\n"],"sourceRoot":""}