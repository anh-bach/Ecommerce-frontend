{"version":3,"sources":["pages/Checkout.js","functions/user.js"],"names":["Checkout","history","useState","loading","setLoading","products","setProducts","total","setTotal","address","setAddress","addressSaved","setAddressSaved","coupon","setCoupon","totalAfterDiscount","setTotalAfterDiscount","discountError","setDiscountError","useSelector","state","user","COD","dispatch","useDispatch","useEffect","loadProducts","a","getUserCart","token","res","data","cartTotal","console","log","emptyCart","window","localStorage","removeItem","type","ADD_TO_CART","payload","emptyUserCart","toast","success","saveAddressToDb","error","saveUserAddress","slice","length","ok","applyDiscountCoupon","applyCoupon","COUPON_APPLIED","err","createCashOrder","createCashOrderForUser","CASH_ON_DELIVERY","push","className","theme","value","onChange","onClick","e","target","map","item","index","product","title","color","count","price","disabled","userCart","cart","authToken","axios","post","process","headers","get","delete","createOrder","stripeResponse","couponApplied","getUserOrders","getWishlist","addWishlist","productId","removeWishlist","put"],"mappings":"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","file":"static/js/42.be6dceb2.chunk.js","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport {\r\n  getUserCart,\r\n  emptyUserCart,\r\n  saveUserAddress,\r\n  applyCoupon,\r\n  createCashOrderForUser,\r\n} from '../functions/user';\r\nimport {\r\n  ADD_TO_CART,\r\n  CASH_ON_DELIVERY,\r\n  COUPON_APPLIED,\r\n} from '../actions/types';\r\n\r\nconst Checkout = ({ history }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [address, setAddress] = useState('');\r\n  const [addressSaved, setAddressSaved] = useState(false);\r\n  const [coupon, setCoupon] = useState('');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\r\n  const [discountError, setDiscountError] = useState('');\r\n  const { user, COD } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    loadProducts();\r\n  }, [user]);\r\n\r\n  const loadProducts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await getUserCart(user.token);\r\n\r\n      setProducts(res.data.products);\r\n      setTotal(res.data.cartTotal);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log('from Checkout Load Products', error);\r\n    }\r\n  };\r\n\r\n  const emptyCart = async () => {\r\n    if (typeof window !== 'undefined') {\r\n      try {\r\n        setLoading(true);\r\n        //remove from localStorage\r\n        localStorage.removeItem('cart');\r\n        //remove from redux\r\n        dispatch({ type: ADD_TO_CART, payload: [] });\r\n        //remove from backend\r\n        await emptyUserCart(user.token);\r\n        setProducts([]);\r\n        setTotal(0);\r\n        setTotalAfterDiscount(0);\r\n        setCoupon('');\r\n        toast.success('Cart is empty. Continue Shopping');\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log('From empty cart', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveAddressToDb = async () => {\r\n    try {\r\n      if (!address) {\r\n        toast.error('Please Fill In Your Address to proceed the order');\r\n        return;\r\n      }\r\n      const res = await saveUserAddress(\r\n        user.token,\r\n        address.slice(3, address.length - 4)\r\n      );\r\n\r\n      if (res.data.ok) {\r\n        setAddressSaved(true);\r\n        toast.success('Address Saved');\r\n      }\r\n    } catch (error) {\r\n      console.log('From save address', error);\r\n    }\r\n  };\r\n\r\n  const applyDiscountCoupon = async () => {\r\n    try {\r\n      const res = await applyCoupon(user.token, coupon);\r\n\r\n      if (res.data) {\r\n        setTotalAfterDiscount(res.data);\r\n        //update redux coupon applied\r\n        dispatch({ type: COUPON_APPLIED, payload: true });\r\n      }\r\n      if (res.data.err) {\r\n        setDiscountError(res.data.err);\r\n        //update redux coupon applied\r\n        dispatch({ type: COUPON_APPLIED, payload: false });\r\n      }\r\n    } catch (error) {\r\n      console.log('From apply discount coupon', error);\r\n    }\r\n  };\r\n\r\n  const showAddress = () => (\r\n    <Fragment>\r\n      <ReactQuill theme='snow' value={address} onChange={setAddress} />\r\n      <button className='btn btn-primary mt-2' onClick={saveAddressToDb}>\r\n        Save\r\n      </button>\r\n    </Fragment>\r\n  );\r\n\r\n  const showProductSummary = () =>\r\n    products.map((item, index) => (\r\n      <div key={index}>\r\n        <p>\r\n          {item.product.title} ({item.color}) x {item.count} = $\r\n          {item.product.price * item.count}\r\n        </p>\r\n      </div>\r\n    ));\r\n\r\n  const showApplyCoupon = () => (\r\n    <Fragment>\r\n      <input\r\n        type='text'\r\n        className='form-control'\r\n        value={coupon}\r\n        onChange={(e) => {\r\n          setCoupon(e.target.value);\r\n          setDiscountError('');\r\n        }}\r\n      />\r\n      <button className='btn btn-primary mt-2' onClick={applyDiscountCoupon}>\r\n        Apply\r\n      </button>\r\n    </Fragment>\r\n  );\r\n\r\n  const createCashOrder = async () => {\r\n    try {\r\n      const res = await createCashOrderForUser(user.token, COD, coupon);\r\n      //empty cart redux, loclaStorage\r\n      if (res.data.ok) {\r\n        localStorage.removeItem('cart');\r\n        dispatch({ type: ADD_TO_CART, payload: [] });\r\n        dispatch({ type: COUPON_APPLIED, payload: false });\r\n        dispatch({ type: CASH_ON_DELIVERY, payload: false });\r\n        //empty cart from backend\r\n        await emptyUserCart(user.token);\r\n        //redirect\r\n        history.push('/user/history');\r\n      }\r\n    } catch (error) {\r\n      console.log('From cash order', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='row mt-2 px-2'>\r\n      <div className='col-md-6'>\r\n        <h4>Delivery Address</h4>\r\n        <br />\r\n        {showAddress()}\r\n        <hr />\r\n        <h4>Got Coupon?</h4>\r\n        {showApplyCoupon()}\r\n        <br />\r\n        {discountError && <p className='bg-danger p-2'>{discountError}</p>}\r\n      </div>\r\n      <div className='col-md-6'>\r\n        {loading ? (\r\n          <h4 className='text-danger'>Loading...</h4>\r\n        ) : (\r\n          <h4>Order Summary</h4>\r\n        )}\r\n        <hr />\r\n        <p>Products {products.length}</p>\r\n        <hr />\r\n        {products.length > 0 && showProductSummary()}\r\n\r\n        <hr />\r\n        <p>Cart Total: ${total}</p>\r\n\r\n        {totalAfterDiscount > 0 && (\r\n          <p className='bg-success p-2'>\r\n            Discount Applied: Total Payment: ${totalAfterDiscount}\r\n          </p>\r\n        )}\r\n\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            {COD ? (\r\n              <button\r\n                className='btn btn-primary'\r\n                disabled={!addressSaved || !products.length}\r\n                onClick={createCashOrder}\r\n              >\r\n                Place Order\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className='btn btn-primary'\r\n                disabled={!addressSaved || !products.length}\r\n                onClick={() => history.push('/payment')}\r\n              >\r\n                Place Order\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className='col-md-6'>\r\n            <button\r\n              className='btn btn-primary'\r\n              onClick={emptyCart}\r\n              disabled={!products.length}\r\n            >\r\n              Empty Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import axios from 'axios';\r\n\r\nexport const userCart = async (cart, authToken) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cart`,\r\n    { cart },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getUserCart = async (authToken) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: { authToken },\r\n  });\r\n};\r\n\r\nexport const emptyUserCart = async (authToken) => {\r\n  return await axios.delete(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: { authToken },\r\n  });\r\n};\r\n\r\nexport const saveUserAddress = async (authToken, address) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/address`,\r\n    { address },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const applyCoupon = async (authToken, coupon) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cart/coupon`,\r\n    { coupon },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const createOrder = async (authToken, stripeResponse) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/order`,\r\n    { stripeResponse },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const createCashOrderForUser = async (authToken, COD, coupon) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cash-order`,\r\n    { COD, couponApplied: coupon },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getUserOrders = async (authToken) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/user/orders`, {\r\n    headers: { authToken },\r\n  });\r\n};\r\n\r\nexport const getWishlist = async (authToken) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/user/wishlist`, {\r\n    headers: { authToken },\r\n  });\r\n};\r\n\r\nexport const addWishlist = async (authToken, productId) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/user/wishlist`,\r\n    { productId },\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n\r\nexport const removeWishlist = async (authToken, productId) => {\r\n  return await axios.put(\r\n    `${process.env.REACT_APP_API}/user/wishlist/${productId}`,\r\n    {},\r\n    {\r\n      headers: { authToken },\r\n    }\r\n  );\r\n};\r\n"],"sourceRoot":""}