{"version":3,"sources":["components/forms/ProductUpdateForm.js","pages/admin/product/ProductUpdate.js","functions/category.js","components/nav/AdminNav.js","functions/product.js","components/forms/FileUpload.js"],"names":["Option","Select","ProductUpdateForm","handleSubmit","handleChange","values","handleCategoryChange","setValues","categories","subOptions","arrayOfSubIds","setArrayOfSubIds","selectedCategory","title","description","price","category","shipping","quantity","colors","brands","color","brand","onSubmit","className","type","name","value","onChange","map","_id","required","length","mode","style","width","placeholder","sub","initialState","subs","images","ProductUpdate","history","useState","loading","setLoading","setCategories","setSubOptions","setSelectedCategory","user","useSelector","state","slug","useParams","useEffect","loadProduct","loadCategories","a","getProduct","res1","data","getCategorySubs","res2","arr","push","prev","console","log","response","getCategories","res","e","preventDefault","updateProduct","token","toast","success","error","err","target","AdminNav","LoadingOutlined","FileUpload","axios","get","process","getCategory","id","removeCategory","authtoken","delete","headers","updateCategory","put","createCategory","post","to","createProduct","getProductsByCount","count","removeProduct","listProducts","sort","order","page","getProductsCount","productStar","productId","star","getRelated","fetchProductsByFilter","arg","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","fileUploadAndResize","files","allUploadedFiles","i","image","handleImageRemove","public_id","filter","onClick","cursor","src","url","size","shape","multiple","accept","hidden"],"mappings":"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","file":"static/js/30.bbb684e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport Select from 'antd/lib/select';\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductUpdateForm = ({\r\n  handleSubmit,\r\n  handleChange,\r\n  values,\r\n  setValues,\r\n  handleCategoryChange,\r\n  categories,\r\n  subOptions,\r\n  arrayOfSubIds,\r\n  setArrayOfSubIds,\r\n  selectedCategory,\r\n}) => {\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    category,\r\n    shipping,\r\n    quantity,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <label>Title</label>\r\n        <input\r\n          className='form-control'\r\n          type='text'\r\n          name='title'\r\n          value={title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Description</label>\r\n        <input\r\n          className='form-control'\r\n          type='text'\r\n          name='description'\r\n          value={description}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Price</label>\r\n        <input\r\n          className='form-control'\r\n          type='number'\r\n          name='price'\r\n          value={price}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Shipping</label>\r\n        <select\r\n          name='shipping'\r\n          className='form-control'\r\n          onChange={handleChange}\r\n          value={shipping}\r\n        >\r\n          <option value=''>Please select</option>\r\n          <option value='Yes'>Yes</option>\r\n          <option value='No'>No</option>\r\n        </select>\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Quantity</label>\r\n        <input\r\n          className='form-control'\r\n          type='number'\r\n          name='quantity'\r\n          value={quantity}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Color</label>\r\n        <select\r\n          name='color'\r\n          className='form-control'\r\n          onChange={handleChange}\r\n          value={color}\r\n        >\r\n          <option value=''>Please select</option>\r\n          {colors.map((color) => (\r\n            <option key={color} value={color}>\r\n              {color}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Brand</label>\r\n        <select\r\n          name='brand'\r\n          className='form-control'\r\n          onChange={handleChange}\r\n          value={brand}\r\n        >\r\n          <option value=''>Please select</option>\r\n          {brands.map((brand) => (\r\n            <option key={brand} value={brand}>\r\n              {brand}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className='form-group'>\r\n        <label>Category</label>\r\n        <select\r\n          className='form-control'\r\n          name='category'\r\n          onChange={handleCategoryChange}\r\n          value={selectedCategory || category._id}\r\n          required\r\n        >\r\n          {categories.length > 0 &&\r\n            categories.map((category) => (\r\n              <option key={category._id} value={category._id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className='form-group'>\r\n        <label>Sub categories</label>\r\n        <Select\r\n          mode='multiple'\r\n          style={{ width: '100%' }}\r\n          placeholder='Please select'\r\n          value={arrayOfSubIds}\r\n          onChange={(value) => setArrayOfSubIds(value)}\r\n        >\r\n          {subOptions.length &&\r\n            subOptions.map((sub) => (\r\n              <Option key={sub._id} value={sub._id}>\r\n                {sub.name}\r\n              </Option>\r\n            ))}\r\n        </Select>\r\n      </div>\r\n\r\n      <button className='btn btn-outline-info'>Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductUpdateForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport { getProduct, updateProduct } from '../../../functions/product';\r\nimport { getCategories, getCategorySubs } from '../../../functions/category';\r\nimport ProductUpdateForm from '../../../components/forms/ProductUpdateForm';\r\nimport FileUpload from '../../../components/forms/FileUpload';\r\n\r\nconst initialState = {\r\n  title: '',\r\n  description: '',\r\n  price: '',\r\n  category: '',\r\n  categories: [],\r\n  subs: [],\r\n  shipping: '',\r\n  quantity: '',\r\n  images: [],\r\n  colors: ['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n  brands: ['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS'],\r\n  color: '',\r\n  brand: '',\r\n};\r\n\r\nconst ProductUpdate = ({ history }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [values, setValues] = useState(initialState);\r\n  const [categories, setCategories] = useState([]);\r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [arrayOfSubIds, setArrayOfSubIds] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n\r\n  const user = useSelector((state) => state.user);\r\n  const { slug } = useParams();\r\n\r\n  useEffect(() => {\r\n    loadProduct();\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadProduct = async () => {\r\n    try {\r\n      setLoading(true);\r\n      //1))load single product\r\n      const res1 = await getProduct(slug);\r\n      setValues({ ...values, ...res1.data });\r\n      //2))load category subs\r\n      const res2 = await getCategorySubs(res1.data.category._id);\r\n      setSubOptions(res2.data);\r\n      setLoading(false);\r\n      //3)) prepare array of sub ids to show as default subs value in ant densign select\r\n      let arr = [];\r\n      res1.data.subs.map((sub) => arr.push(sub._id));\r\n      setArrayOfSubIds((prev) => arr);\r\n    } catch (error) {\r\n      console.log('From Product update load product', error.response);\r\n    }\r\n  };\r\n\r\n  const loadCategories = async () => {\r\n    try {\r\n      const res = await getCategories();\r\n      setCategories(res.data);\r\n    } catch (error) {\r\n      console.log('from load categories', error.response);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      values.subs = arrayOfSubIds;\r\n      values.category = selectedCategory || values.category;\r\n\r\n      const res = await updateProduct(slug, values, user.token);\r\n      setLoading(false);\r\n      toast.success(`${res.data.title} is updated.`);\r\n      history.push('/admin/products');\r\n    } catch (error) {\r\n      console.log('from update product', error.response);\r\n      setLoading(false);\r\n      toast.error(error.response.data.err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCategoryChange = async (e) => {\r\n    setValues({ ...values, subs: [] });\r\n    setSelectedCategory(e.target.value);\r\n    //array for antd subs select\r\n\r\n    try {\r\n      const res = await getCategorySubs(e.target.value);\r\n      setSubOptions(res.data);\r\n      //if user click back to the original category, re-populate the initial subs\r\n      if (values.category._id === e.target.value) {\r\n        loadProduct();\r\n      }\r\n      setArrayOfSubIds([]);\r\n    } catch (error) {\r\n      console.log('From handleCategoryChange', error.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          {' '}\r\n          {loading ? (\r\n            <LoadingOutlined className='text-danger h1' />\r\n          ) : (\r\n            <h4>Product Update</h4>\r\n          )}\r\n          <hr />\r\n          <div className='p-3'>\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n          <ProductUpdateForm\r\n            values={values}\r\n            setValues={setValues}\r\n            handleSubmit={handleSubmit}\r\n            handleChange={handleChange}\r\n            handleCategoryChange={handleCategoryChange}\r\n            categories={categories}\r\n            subOptions={subOptions}\r\n            arrayOfSubIds={arrayOfSubIds}\r\n            setArrayOfSubIds={setArrayOfSubIds}\r\n            selectedCategory={selectedCategory}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductUpdate;\r\n","import axios from 'axios';\r\n\r\nexport const getCategories = async () => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/categories`, {});\r\n};\r\n\r\nexport const getCategory = async (slug) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/category/${slug}`, {});\r\n};\r\nexport const getCategorySubs = async (id) => {\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_API}/category/subs/${id}`,\r\n    {}\r\n  );\r\n};\r\n\r\nexport const removeCategory = async (slug, authtoken) => {\r\n  return await axios.delete(`${process.env.REACT_APP_API}/category/${slug}`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateCategory = async (slug, name, authtoken) => {\r\n  return await axios.put(\r\n    `${process.env.REACT_APP_API}/category/${slug}`,\r\n    { name },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const createCategory = async (name, authtoken) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/category`,\r\n    { name },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdminNav = () => {\r\n  return (\r\n    <div>\r\n      <ul className='nav flex-column'>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/admin/dashboard'>\r\n            Dashboard\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/admin/product'>\r\n            Product\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/admin/products'>\r\n            Products\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/admin/category'>\r\n            Categories\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/admin/sub'>\r\n            Sub Category\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/admin/coupon'>\r\n            Coupon\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/user/password'>\r\n            Password\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminNav;\r\n","import axios from 'axios';\r\n\r\nexport const createProduct = async (values, authtoken) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_API}/product`,\r\n    { ...values },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getProductsByCount = async (count) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/products/${count}`, {});\r\n};\r\n\r\nexport const getProducts = async () => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/product`);\r\n};\r\n\r\nexport const getProduct = async (slug) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/product/${slug}`);\r\n};\r\n\r\nexport const removeProduct = async (slug, authtoken) => {\r\n  return await axios.delete(`${process.env.REACT_APP_API}/product/${slug}`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateProduct = async (slug, values, authtoken) => {\r\n  return await axios.put(\r\n    `${process.env.REACT_APP_API}/product/${slug}`,\r\n    { ...values },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const listProducts = async (sort, order, page) => {\r\n  return await axios.post(`${process.env.REACT_APP_API}/products/`, {\r\n    sort,\r\n    order,\r\n    page,\r\n  });\r\n};\r\n\r\nexport const getProductsCount = async () => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/products/total`);\r\n};\r\n\r\nexport const productStar = async (productId, star, authtoken) => {\r\n  return await axios.put(\r\n    `${process.env.REACT_APP_API}/product/star/${productId}`,\r\n    { star },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getRelated = async (productId) => {\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_API}/product/related/${productId}`\r\n  );\r\n};\r\n\r\nexport const fetchProductsByFilter = async (arg) => {\r\n  return await axios.post(`${process.env.REACT_APP_API}/search/filters/`, arg);\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport axios from 'axios';\r\nimport Avatar from 'antd/lib/avatar';\r\nimport Badge from 'antd/lib/badge';\r\n\r\nconst FileUpload = ({ values, setValues, setLoading }) => {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const resizeFile = (file) =>\r\n    new Promise((resolve) => {\r\n      Resizer.imageFileResizer(\r\n        file,\r\n        720,\r\n        720,\r\n        'JPEG',\r\n        100,\r\n        0,\r\n        (uri) => {\r\n          resolve(uri);\r\n        },\r\n        'base64'\r\n      );\r\n    });\r\n\r\n  const fileUploadAndResize = async (e) => {\r\n    //resize\r\n    let files = e.target.files;\r\n    let allUploadedFiles = values.images;\r\n    if (files) {\r\n      setLoading(true);\r\n      for (let i = 0; i < files.length; i++) {\r\n        try {\r\n          // Resizer.imageFileResizer(files[i], 720, 720, 'JPEG', 100, 0, (uri) => {}, 'base64')\r\n          const image = await resizeFile(files[i]);\r\n          const res = await axios.post(\r\n            `${process.env.REACT_APP_API}/uploadimages`,\r\n            { image },\r\n            {\r\n              headers: {\r\n                authtoken: user ? user.token : '',\r\n              },\r\n            }\r\n          );\r\n          allUploadedFiles.push(res.data);\r\n          setValues({ ...values, images: allUploadedFiles });\r\n        } catch (error) {\r\n          console.log('From upload files', error.response);\r\n          setLoading(false);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n    //send to server to upload to cloudinary\r\n    //set url to images[] in parent component - ProductCreate\r\n  };\r\n\r\n  const handleImageRemove = async (public_id) => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.post(\r\n        `${process.env.REACT_APP_API}/removeimage`,\r\n        { public_id },\r\n        {\r\n          headers: {\r\n            authtoken: user ? user.token : '',\r\n          },\r\n        }\r\n      );\r\n\r\n      let { images } = values;\r\n      images = images.filter((image) => image.public_id !== public_id);\r\n      setValues({ ...values, images });\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log('From remove image', error.response);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {values.images.length > 0 && (\r\n        <div className='row'>\r\n          {values.images.map((image) => (\r\n            <Badge\r\n              key={image.public_id}\r\n              count='x'\r\n              onClick={() => handleImageRemove(image.public_id)}\r\n              style={{ cursor: 'pointer' }}\r\n            >\r\n              <Avatar\r\n                src={image.url}\r\n                size={100}\r\n                shape='square'\r\n                className='ml-3'\r\n              />\r\n            </Badge>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <div className='row'>\r\n        <label className='btn btn-primary btn-raised mt-3'>\r\n          Choose File\r\n          <input\r\n            type='file'\r\n            multiple\r\n            accept='images/*'\r\n            hidden\r\n            onChange={fileUploadAndResize}\r\n          />\r\n        </label>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"sourceRoot":""}