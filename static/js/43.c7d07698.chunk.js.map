{"version":3,"sources":["pages/auth/Login.js"],"names":["Login","location","useState","email","setEmail","password","setPassword","loading","setLoading","dispatch","useDispatch","history","useHistory","roleBasedRedirect","res","intended","state","push","from","data","role","user","useSelector","useEffect","token","handleSubmit","e","a","preventDefault","auth","signInWithEmailAndPassword","result","getIdTokenResult","idTokenResult","createOrUpdateUser","type","LOGGED_IN_USER","payload","name","_id","console","log","toast","error","message","googleLogin","signInWithPopup","googleAuthProvider","facebookLogin","facebookAuthProvider","code","pendingCred","credential","fetchSignInMethodsForEmail","prompt","linkWithCredential","className","onSubmit","placeholder","value","onChange","target","autoFocus","onClick","block","shape","icon","size","disabled","length","to"],"mappings":"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","file":"static/js/43.c7d07698.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Button from 'antd/lib/button';\r\nimport {\r\n  MailOutlined,\r\n  GoogleOutlined,\r\n  FacebookOutlined,\r\n} from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {\r\n  auth,\r\n  googleAuthProvider,\r\n  facebookAuthProvider,\r\n} from './../../firebase';\r\nimport { LOGGED_IN_USER } from '../../actions/types';\r\nimport { createOrUpdateUser } from '../../functions/auth';\r\n\r\nconst Login = ({ location }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  //redirect base on user role\r\n  const roleBasedRedirect = (res) => {\r\n    //check if intended path from history location state\r\n    let intended = location.state;\r\n\r\n    if (intended) {\r\n      history.push(intended.from);\r\n    } else {\r\n      if (res.data.role === 'admin') {\r\n        history.push('/admin/dashboard');\r\n      } else {\r\n        history.push('/user/history');\r\n      }\r\n    }\r\n  };\r\n\r\n  const user = useSelector((state) => state.user);\r\n  //check logged in user\r\n  useEffect(() => {\r\n    if (user && user.token) history.push('/');\r\n  }, [user, history]);\r\n\r\n  //1))submit form login\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //loading\r\n    setLoading(true);\r\n    try {\r\n      const result = await auth.signInWithEmailAndPassword(email, password);\r\n      const { user } = result;\r\n      const idTokenResult = await user.getIdTokenResult();\r\n\r\n      //sending token to backend and save user data in database\r\n      const res = await createOrUpdateUser(idTokenResult.token);\r\n      //update global store\r\n      dispatch({\r\n        type: LOGGED_IN_USER,\r\n        payload: {\r\n          name: res.data.name,\r\n          email: res.data.email,\r\n          token: idTokenResult.token,\r\n          role: res.data.role,\r\n          _id: res.data._id,\r\n        },\r\n      });\r\n      //redirect base on user roles\r\n      roleBasedRedirect(res);\r\n    } catch (error) {\r\n      //\r\n      console.log(error);\r\n      toast.error(error.message);\r\n      //loading\r\n      setLoading(false);\r\n    }\r\n  };\r\n  //Google login\r\n  const googleLogin = async () => {\r\n    //\r\n    try {\r\n      const result = await auth.signInWithPopup(googleAuthProvider);\r\n      const { user } = result;\r\n      const idTokenResult = await user.getIdTokenResult();\r\n      //sending token to backend and save user data in database\r\n      const res = await createOrUpdateUser(idTokenResult.token);\r\n      //update global store\r\n      dispatch({\r\n        type: LOGGED_IN_USER,\r\n        payload: {\r\n          name: res.data.name,\r\n          email: res.data.email,\r\n          token: idTokenResult.token,\r\n          role: res.data.role,\r\n          _id: res.data._id,\r\n        },\r\n      });\r\n      roleBasedRedirect(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error.message);\r\n      //loading\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //facebook login\r\n  const facebookLogin = async () => {\r\n    try {\r\n      const result = await auth.signInWithPopup(facebookAuthProvider);\r\n      const { user } = result;\r\n      const idTokenResult = await user.getIdTokenResult();\r\n      //sending token to backend and save user data in database\r\n      const res = await createOrUpdateUser(idTokenResult.token);\r\n      //update global store\r\n      dispatch({\r\n        type: LOGGED_IN_USER,\r\n        payload: {\r\n          name: res.data.name,\r\n          email: res.data.email,\r\n          token: idTokenResult.token,\r\n          role: res.data.role,\r\n          _id: res.data._id,\r\n        },\r\n      });\r\n      history.push('/');\r\n    } catch (error) {\r\n      if (error.code === 'auth/account-exists-with-different-credential') {\r\n        //handle existing email error\r\n        var pendingCred = error.credential;\r\n        var email = error.email;\r\n        const methods = await auth.fetchSignInMethodsForEmail(email);\r\n\r\n        if (methods[0] === 'password') {\r\n          try {\r\n            const password = prompt('Enter your password');\r\n            const result = await auth.signInWithEmailAndPassword(\r\n              email,\r\n              password\r\n            );\r\n            await result.user.linkWithCredential(pendingCred);\r\n            const { user } = result;\r\n            const idTokenResult = await user.getIdTokenResult();\r\n            //sending token to backend and save user data in database\r\n            const res = await createOrUpdateUser(idTokenResult.token);\r\n            //update global store\r\n            dispatch({\r\n              type: LOGGED_IN_USER,\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                _id: res.data._id,\r\n              },\r\n            });\r\n            roleBasedRedirect(res);\r\n            return;\r\n          } catch (error) {\r\n            console.log(error);\r\n            toast.error(error.message);\r\n            //loading\r\n            setLoading(false);\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log(error);\r\n      toast.error(error.message);\r\n      //loading\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <input\r\n          type='email'\r\n          className='form-control'\r\n          placeholder='Your email address'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          autoFocus\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <input\r\n          type='password'\r\n          className='form-control'\r\n          placeholder='Your password'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <Button\r\n        onClick={handleSubmit}\r\n        type='primary'\r\n        className='mb-3'\r\n        block\r\n        shape='round'\r\n        icon={<MailOutlined />}\r\n        size='large'\r\n        disabled={!email || password.length < 6}\r\n      >\r\n        Login with Email/Password\r\n      </Button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className='container p-5'>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n          {!loading ? (\r\n            <h4>Login</h4>\r\n          ) : (\r\n            <h4 className='text-danger'>Loading...</h4>\r\n          )}\r\n          {loginForm()}\r\n          <Button\r\n            onClick={googleLogin}\r\n            type='danger'\r\n            className='mb-3'\r\n            block\r\n            shape='round'\r\n            icon={<GoogleOutlined />}\r\n            size='large'\r\n          >\r\n            Login with Google\r\n          </Button>\r\n          <Button\r\n            onClick={facebookLogin}\r\n            type='primary'\r\n            className='mb-3'\r\n            block\r\n            shape='round'\r\n            icon={<FacebookOutlined />}\r\n            size='large'\r\n          >\r\n            Login with Facebook\r\n          </Button>\r\n          <Link to='/forgot/password' className='float-right text-danger'>\r\n            Forgot Password\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}